// <auto-generated />
using System;
using E_Administration.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Administration.Migrations
{
    [DbContext(typeof(EAdministrationContext))]
    [Migration("20240829132800_EAdministrationMigration")]
    partial class EAdministrationMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Administration.Models.AdditionalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<string>("ProfilePicture")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("profile_picture")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__addition__3213E83FDAA90A25");

                    b.HasIndex("UserId");

                    b.ToTable("additional_info", (string)null);
                });

            modelBuilder.Entity("E_Administration.Models.Complaint", b =>
                {
                    b.Property<int>("ComplaintsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("complaints_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComplaintsId"));

                    b.Property<string>("ComplaintsResponse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("complaints_response");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("ComplaintsId")
                        .HasName("PK__complain__5C8661EEB51A97C3");

                    b.HasIndex("UserId");

                    b.ToTable("complaints", (string)null);
                });

            modelBuilder.Entity("E_Administration.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("department_name");

                    b.HasKey("DepartmentId")
                        .HasName("PK__departme__C22324229EDE6AF9");

                    b.ToTable("departments", (string)null);
                });

            modelBuilder.Entity("E_Administration.Models.Floor", b =>
                {
                    b.Property<int>("FloorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("floor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FloorId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("FloorId")
                        .HasName("PK__floors__76040CCC689CF7BC");

                    b.ToTable("floors", (string)null);
                });

            modelBuilder.Entity("E_Administration.Models.Hardware", b =>
                {
                    b.Property<int>("HardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hard_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HardId"));

                    b.Property<string>("OperatingSystem")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("operating_system");

                    b.Property<string>("Processor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("processor");

                    b.Property<int>("Ram")
                        .HasColumnType("int")
                        .HasColumnName("ram");

                    b.Property<string>("SoftwareName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("software_name");

                    b.Property<int?>("StorageCapacity")
                        .HasColumnType("int")
                        .HasColumnName("storage_capacity");

                    b.HasKey("HardId")
                        .HasName("PK__hardware__2646D038CDD871DC");

                    b.ToTable("hardwares", (string)null);
                });

            modelBuilder.Entity("E_Administration.Models.Lab", b =>
                {
                    b.Property<int>("LabId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lab_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LabId"));

                    b.Property<int>("FloorId")
                        .HasColumnType("int")
                        .HasColumnName("floor_id");

                    b.Property<string>("LabName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lab_name");

                    b.HasKey("LabId")
                        .HasName("PK__labs__66DE64DB10E261FE");

                    b.HasIndex("FloorId");

                    b.HasIndex(new[] { "LabName" }, "UQ__labs__6761F66560A4A4B7")
                        .IsUnique();

                    b.ToTable("labs", (string)null);
                });

            modelBuilder.Entity("E_Administration.Models.Pc", b =>
                {
                    b.Property<int>("PcId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pc_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PcId"));

                    b.Property<int>("HardId")
                        .HasColumnType("int")
                        .HasColumnName("hard_id");

                    b.Property<int>("LabId")
                        .HasColumnType("int")
                        .HasColumnName("lab_id");

                    b.Property<string>("PcName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pc_name");

                    b.Property<DateTime>("PurchasedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("purchased_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SoftId")
                        .HasColumnType("int")
                        .HasColumnName("soft_id");

                    b.HasKey("PcId")
                        .HasName("PK__pcs__1D3A69C0273E265A");

                    b.HasIndex("HardId");

                    b.HasIndex("LabId");

                    b.HasIndex("SoftId");

                    b.ToTable("pcs", (string)null);
                });

            modelBuilder.Entity("E_Administration.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("role_name");

                    b.HasKey("RoleId")
                        .HasName("PK__roles__760965CC60F63F18");

                    b.HasIndex(new[] { "RoleName" }, "UQ__roles__783254B181C5427B")
                        .IsUnique();

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("E_Administration.Models.Software", b =>
                {
                    b.Property<int>("SoftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("soft_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoftId"));

                    b.Property<string>("SoftwareName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("software_name");

                    b.HasKey("SoftId")
                        .HasName("PK__software__FDAD1D125144F152");

                    b.ToTable("softwares", (string)null);
                });

            modelBuilder.Entity("E_Administration.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F951B45F0");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__users__AB6E6164FF826E34")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("E_Administration.Models.AdditionalInfo", b =>
                {
                    b.HasOne("E_Administration.Models.User", "User")
                        .WithMany("AdditionalInfos")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__additiona__user___4222D4EF");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_Administration.Models.Complaint", b =>
                {
                    b.HasOne("E_Administration.Models.User", "User")
                        .WithMany("Complaints")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__complaint__user___6D0D32F4");

                    b.Navigation("User");
                });

            modelBuilder.Entity("E_Administration.Models.Lab", b =>
                {
                    b.HasOne("E_Administration.Models.Floor", "Floor")
                        .WithMany("Labs")
                        .HasForeignKey("FloorId")
                        .IsRequired()
                        .HasConstraintName("FK__labs__floor_id__5535A963");

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("E_Administration.Models.Pc", b =>
                {
                    b.HasOne("E_Administration.Models.Hardware", "Hard")
                        .WithMany("Pcs")
                        .HasForeignKey("HardId")
                        .IsRequired()
                        .HasConstraintName("FK__pcs__hard_id__693CA210");

                    b.HasOne("E_Administration.Models.Lab", "Lab")
                        .WithMany("Pcs")
                        .HasForeignKey("LabId")
                        .IsRequired()
                        .HasConstraintName("FK__pcs__lab_id__6A30C649");

                    b.HasOne("E_Administration.Models.Software", "Soft")
                        .WithMany("Pcs")
                        .HasForeignKey("SoftId")
                        .IsRequired()
                        .HasConstraintName("FK__pcs__soft_id__68487DD7");

                    b.Navigation("Hard");

                    b.Navigation("Lab");

                    b.Navigation("Soft");
                });

            modelBuilder.Entity("E_Administration.Models.User", b =>
                {
                    b.HasOne("E_Administration.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__users__role_id__3C69FB99");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("E_Administration.Models.Floor", b =>
                {
                    b.Navigation("Labs");
                });

            modelBuilder.Entity("E_Administration.Models.Hardware", b =>
                {
                    b.Navigation("Pcs");
                });

            modelBuilder.Entity("E_Administration.Models.Lab", b =>
                {
                    b.Navigation("Pcs");
                });

            modelBuilder.Entity("E_Administration.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("E_Administration.Models.Software", b =>
                {
                    b.Navigation("Pcs");
                });

            modelBuilder.Entity("E_Administration.Models.User", b =>
                {
                    b.Navigation("AdditionalInfos");

                    b.Navigation("Complaints");
                });
#pragma warning restore 612, 618
        }
    }
}
